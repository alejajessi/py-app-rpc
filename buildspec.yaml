version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
  pre_build:
    commands:
      - echo "Installing dependencies"
      - echo $ECR_URL
      - pip3.12 install grpcio-tools==1.62.1
      - pip3.12 install grpcio==1.62.1
      - python3 -m grpc_tools.protoc -I ./app/proto --python_out=./app/srv-client/generated/ --grpc_python_out=./app/srv-client/generated/ ./app/proto/rpc.proto
      - python3 -m grpc_tools.protoc -I ./app/proto --python_out=./app/srv-server/generated/ --grpc_python_out=./app/srv-server/generated/ ./app/proto/rpc.proto

  build:
    commands:
      - echo "Build docker images"
      - docker build -t $ECR_URL:server-latest ./app/srv-server/
      - docker build -t $ECR_URL:client-latest ./app/srv-client/
      - aws ecr get-login-password --region us-east-1 --no-cli-auto-prompt | docker login --username AWS --password-stdin $ECR_URL
      - echo "Create tag docker"
      - docker tag $ECR_URL:server-latest $ECR_URL/server-latest
      - docker tag $ECR_URL:client-latest $ECR_URL/client-latest
      - echo "Push docker images"
      - docker push $ECR_URL:server-latest
      - docker push $ECR_URL:server-latest
      - echo "Config EKS env"
      - aws eks --region us-east-1 update-kubeconfig --name dev-py-app-eks --alias dev-py-app-eks
      - echo "Apply workflows"
      - kubectl apply -f ./kubernetes/rpc_client.yaml
      - kubectl apply -f ./kubernetes/rpc_server.yaml

  post_build:
    commands:
      - echo "Nothing to do in the post_build for now"
